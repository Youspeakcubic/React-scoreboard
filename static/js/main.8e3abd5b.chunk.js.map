{"version":3,"sources":["stats.js","Header.js","Counter.js","Player.js","addplayerform.js","App.js","reportWebVitals.js","index.js"],"names":["Stats","props","totalPlayers","players","length","totalPoints","reduce","total","player","score","className","Header","title","Counter","index","onClick","changeScore","Player","remPlayer","id","name","AddPlayerForm","state","value","handleValueChange","e","setState","target","handleSubmit","preventDefault","addPlayer","onSubmit","this","type","onChange","placeholder","Component","App","prevPlayerId","handleScoreChange","delta","prevState","handleAddPlayer","removePlayer","filter","p","map","toString","React","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.8e3abd5b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Stats = (props) => {\r\n  let totalPlayers = props.players.length;\r\n  let totalPoints = props.players.reduce((total, player) => {\r\n    return total + player.score;\r\n  }, 0);\r\n  return(\r\n    <table className=\"stats\">\r\n      <tbody>\r\n        <tr>\r\n          <td>Players:{}</td>\r\n          <td>{ totalPlayers }</td>\r\n        </tr>\r\n        <tr>\r\n          <td>Total Points:</td>\r\n          <td>{totalPoints}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n  );\r\n}\r\nexport default Stats;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Stats from './stats.js'\r\n{/*Props are read only so only viables when inputting static information into elements, if you wish to dynamically add data to website we must use stateful classes.*/}\r\nconst Header = (props) => {\r\n  return (\r\n    <header>\r\n    <Stats\r\n    players={props.players}\r\n     />\r\n    <h1>{props.title}</h1>\r\n    </header>\r\n  );\r\n}\r\nexport default Header;\r\n","import React from 'react';\r\n{/* We can create state in a class via either the constructor method seen below or by directly calling state such as doing state = {},\r\nthis is transpiled by babel as a constructor method however if not using babel will not work on all browsers.*/}\r\n\r\n{/* When declaring function in react you do not need to start with \"function, also function do not implicitly bind the parent component so when calling it you must bind the component with the bind() method.\"*/}\r\nconst Counter = (props) => {\r\n  let index = props.index;\r\n    return (\r\n      <div className =\"counter\">\r\n        <button className = \"counter-action decrement\" onClick={() => props.changeScore(index,-1)}> - </button>\r\n        <span className=\"counter-score\">{props.score}</span>\r\n        <button className = \"counter-action increment\" onClick={() => props.changeScore(index, 1)}> + </button>\r\n      </div>\r\n    );\r\n}\r\nexport default Counter;\r\n","import React from 'react';\r\nimport Counter from './Counter';\r\nconst Player = (props) => {\r\n  return (\r\n    <div className =\"player\">\r\n      <span className =\"player-name\">\r\n      <button className=\"remove-player\" onClick={() => props.remPlayer(props.id)}>âœ–</button>\r\n      {props.name}\r\n      </span>\r\n      <Counter\r\n       score ={props.score}\r\n       changeScore={props.changeScore}\r\n       index={props.index}\r\n       />\r\n    </div>\r\n  );\r\n}\r\nexport default Player;\r\n","import React, { Component } from 'react';\r\n\r\nclass AddPlayerForm extends Component {\r\n  state ={\r\n    value: ''\r\n  };\r\n  handleValueChange = (e) => {\r\n  this.setState({ value: e.target.value });\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.addPlayer(this.state.value);\r\n    this.setState({\r\n      value:\"\"\r\n    })\r\n  }\r\n  render(){\r\n    return(\r\n      <form  onSubmit={this.handleSubmit}>\r\n        <input\r\n        type=\"text\"\r\n        value={this.state.value}\r\n        onChange={this.handleValueChange}\r\n        placeholder=\"Enter player name\"\r\n         />\r\n         <input\r\n         type=\"submit\"\r\n         value=\"Add Player\"\r\n         />\r\n      </form>\r\n    );\r\n  }\r\n}\r\nexport default AddPlayerForm;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Header from './Header';\nimport Player from './Player';\nimport AddPlayerForm from './addplayerform.js';\n{/*We use prevstate as mutating current state data is not the best practice as it does not mean react will make the changes as soon as the function runs,\nby getting the previous state and changing it within the function we can make fun it is changed.*/}\nclass App extends React.Component {\n  state = {\n    players : [\n          {\n          name: \"Guil\",\n          score: 0,\n          id: 1\n        },\n        {\n          name: \"Treasure\",\n          score: 0,\n          id: 2\n        },\n        {\n          name: \"Ashley\",\n          score: 0,\n          id:3\n        },\n        {\n          name: \"James\",\n          score:0,\n          id: 4\n        }\n      ]\n    };\n\n    //player id Counter\n    prevPlayerId = 4;\n    handleScoreChange = (index, delta) => {\n      this.setState(prevState => ({\n        score:prevState.players[index].score += delta\n      }));\n    }\n    handleAddPlayer = (name) =>{\n      this.setState( prevState => {\n        return {\n          players:[\n            ...prevState.players,\n            {\n              name,\n              score: 0 ,\n              id: this.prevPlayerId += 1\n            }\n          ]\n        };\n      });\n    }\n    removePlayer = (id) => {\n      this.setState( prevState => {\n        return {\n        players:prevState.players.filter( p => p.id !== id)\n      };\n    });\n  }\n  render(){\n    return (\n      <div className = \"scoreboard\">\n        <Header\n        title=\"Scoreboard\"\n        players={this.state.players} />\n\n        {/*map function takes our array and create a copy in a new layout, in this case we are grabbing our player object\n        and tell map to take the properties in the object and place them within a Player element, we defined earlier, as props*/}\n\n        {/*player list */}\n        {this.state.players.map( (player, index) =>\n          <Player\n            name = {player.name}\n            score = {player.score}\n            id = {player.id}\n            key = {player.id.toString()}\n            index={index}\n            changeScore={this.handleScoreChange}\n            remPlayer = {this.removePlayer}\n          />\n       )}\n      <AddPlayerForm addPlayer = {this.handleAddPlayer} />\n      </div>\n    );\n  }\n}\n ReactDOM.render(\n   <App/>,\n   document.getElementById('root')\n );\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}